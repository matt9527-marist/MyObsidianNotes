{
	"nodes":[
		{"id":"bb64e905a061f335","type":"text","text":"Python, Scikit Learn, and Pandas Foundations","x":-182,"y":-370,"width":252,"height":80,"color":"5"},
		{"id":"4d3296735a17ab34","type":"text","text":"[Pandas_Cheat_Sheet.pdf](https://brightspace.marist.edu/content/enforced/59581-20254012901/Resources/CheatSheets/Pandas_Cheat_Sheet.pdf?isCourseFile=true&ou=59581)","x":70,"y":-450,"width":252,"height":80,"color":"5"},
		{"id":"0af723d373f91c9f","type":"text","text":"[Matplotlib_Cheat_Sheet.pdf](https://brightspace.marist.edu/content/enforced/59581-20254012901/Resources/CheatSheets/Matplotlib_Cheat_Sheet.pdf?isCourseFile=true&ou=59581)","x":70,"y":-370,"width":252,"height":80,"color":"5"},
		{"id":"d511e5b98f38aa47","type":"text","text":"```Python\nimport numpy as np\n\ndef vector_sum(a, b):\n    return a + b\n\na = np.array([1, 2, 3])\nb = np.array([4, 5, 6])\n\nprint(vector_sum(a, b))\n```","x":-600,"y":-450,"width":418,"height":280,"color":"5"},
		{"id":"9d3e05c814895a9e","type":"text","text":"Python function that takes two vectors and returns the cosine of the angle between two vectors (a typical similarity measure between vectors)\n```Python\ndef vector_angle(a, b):\n  return np.dot(a, b) / (np.linalg.norm(a) * np.linalg.norm(b))\n\n# If we have a vector a = [1, 0], b = [1, 0], then\n# the cosine between the two should be 1.\na = np.array([1, 0])\nb = np.array([1, 0])\n\nprint(vector_angle(a, b))\n```","x":-182,"y":-290,"width":580,"height":340,"color":"5"},
		{"id":"ad0b2b9918f423b6","type":"text","text":"Python function that takes as arguments matrix A (n x n elements) and a vector b (n elements) given in the form A * x = b, solves for x. \n```Python\ndef solve_system(A, b):\n    x = np.linalg.inv(A).dot(b)\n    return x\n\nA = np.array([[3, 5], [4, 1]])\nb = np.array([2, 7])\n\nx = solve_system(A, b)\n```\nWe take the inverse of the matrix dot `b` to find the vector x.","x":-602,"y":-170,"width":420,"height":400,"color":"5"},
		{"id":"78d505761bd0b186","type":"text","text":"• Read the data and display the first few records.\n• List the average population and households, by number of bedrooms (limit it to those\ncases where number of bedrooms is less than 10)\n```Python\nimport pandas as pd\n\ndf = pd.read_csv(\"sample_data/california_housing_train.csv\")\n\nprint(df.head())\n\navg_by_bedrooms = df[df['total_bedrooms'] < 10].groupby('total_bedrooms').mean()\n\nprint(\"\\nAverage population and households by number of bedrooms where bedrooms < 10:\")\nprint(avg_by_bedrooms[['population', 'households']])\n```","x":-182,"y":50,"width":784,"height":400,"color":"5"},
		{"id":"f98d716597a06447","type":"text","text":"[Cheat sheet Numpy Python copy.indd](https://brightspace.marist.edu/content/enforced/59581-20254012901/Resources/CheatSheets/Numpy_Cheat_Sheet.pdf?isCourseFile=true&ou=59581)","x":-182,"y":-450,"width":252,"height":80,"color":"5"},
		{"id":"736c79f2f75a863c","type":"text","text":"[ML_Numpy_101.ipynb](https://gist.github.com/eitellauria/c7c9d658505b81d57ad9089804f6b42a)\n\n[ML_matplotlib_and_seaborn.ipynb](https://gist.github.com/eitellauria/93e37772e059825f04f4d7179f006812)\n\n[ML_pandas.ipynb](https://gist.github.com/eitellauria/39dd4624cbf507548f09781aa3a0b0d3)","x":-602,"y":230,"width":420,"height":140,"color":"5"}
	],
	"edges":[]
}